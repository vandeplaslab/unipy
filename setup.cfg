[metadata]
name = pyspa
url = https://github.com/vandeplaslab/unipy
download_url = https://github.com/vandeplaslab/unipy
license = MIT
license_files = LICENSE
description = A wrapper package unifying numpy, scipy and cupy.
long_description = file: README.md
long_description_content_type = text/markdown
author = Van de Plas Lab
author_email = r.a.r.moens@tudelft.nl
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Education
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Programming Language :: Python
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Information Analysis
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX
    Operating System :: Unix
    Operating System :: MacOS

[options]
zip_safe = False
packages = find:
package_dir=
    =src
python_requires = >=3.7
include_package_data = True
install_requires =
    numpy<1.19.4
    scipy>=1.7.0
    fbpca >= 1.0
    scikit-learn


[options.packages.find]
where=src

[options.extras_require]
gpu =
    cupy
    pytorch
testing =
    pytest>=7.1.0
    pytest-cov>=2.12.1
    coverage>=5.0.3
dev =
    pre-commit>=2.9.0
    isort>=5.9.3
    black>=20.8b1
    flake8>=3.8.4
    check-manifest>=0.42
    %(testing)s

[flake8]
ignore =
    E1137,
    E722,
    D413,
    D401,
    D205,
    W503,
    W504,
    W605,
    F841,
    E203,
    W1202,
max-line-length = 120
exclude =
    .git,
    .vscode,
    .settings,
    .asv,
    __pycache__,
    docs,
    site-source,
    dist,
    setup.py,
statistics=True

[mypy]
files = unipy/
ignore_missing_imports = True

[report]
exclude_lines =
    pragma: no cover
    def __repr__
    if settings.DEBUG
    raise NotImplementedError
    if __name__ == .__main__.:
    def test

[coverage:run]
source = unipy
parallel = True
omit = tests/*
       *\__init__.py
