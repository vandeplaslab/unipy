[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "unipy"
description = "A wrapper package unifying numpy, scipy and cupy."
readme = "README.md"
license = "MIT"
requires-python = ">=3.7"
version = "0.0.1"
authors = [
    { name = "Van de Plas Lab", email = "r.a.r.moens@tudelft.nl" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
    "fbpca >= 1.0",
    "numpy<2",
    "scikit-learn",
    "scipy>=1.7.0",
]

[project.optional-dependencies]
dev = [
    "black>=20.8b1",
    "check-manifest>=0.42",
    "coverage>=5.0.3",
    "flake8>=3.8.4",
    "isort>=5.9.3",
    "pre-commit>=2.9.0",
    "pytest-cov>=2.12.1",
    "pytest>=7.1.0",
]
gpu = [
    "cupy",
    "pytorch",
]
testing = [
    "coverage>=5.0.3",
    "pytest-cov>=2.12.1",
    "pytest>=7.1.0",
]

[project.urls]
Download = "https://github.com/vandeplaslab/unipy"
Homepage = "https://github.com/vandeplaslab/unipy"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
]

[tool.setuptools_scm]
write_to = "src/unipy/_version.py"


[tool.isort]
profile = "black"
line_length = 120


[tool.black]
line-length = 120
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '.asv'

[tool.check-manifest]
ignore = [
  ".cirrus.yml",
  ".pre-commit-config.yaml",
  "asv.conf.json",
  "codecov.yml",
  "Makefile",
  "src/unipy/_version.py",  # added during build by setuptools_scm
  "tox.ini",
  "*.pyi",  # added by make typestubs
  ".env_sample",
  ".devcontainer/*",
]

[tool.pytest]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::RuntimeWarning",
    # ignored by default
    "ignore::ImportWarning",
    "ignore::PendingDeprecationWarning",
    # raised by Cython, usually harmless
    "ignore:numpy.dtype size changed:RuntimeWarning",
    "ignore:numpy.ufunc size changed:RuntimeWarnin"
]
markers = [
    "slow: mark a test as being slow so can be skipped if only want to run the quick tests"
]

# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 120
target-version = "py38"
src = ["src"]

# https://beta.ruff.rs/docs/rules/
[tool.ruff.lint]
extend-select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D",    # pydocstyle
    "I",    # isort
    "UP",    # pyupgrade
    # "S",    # bandit
    "C4",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
]
# I do this to get numpy-style docstrings AND retain
# D417 (Missing argument descriptions in the docstring)
# otherwise, see:
# https://beta.ruff.rs/docs/faq/#does-ruff-support-numpy-or-google-style-docstrings
# https://github.com/charliermarsh/ruff/issues/2606
extend-ignore = [
    "D100", # Missing docstring in public module
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D401", # First line should be in imperative mood
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]
"setup.py" = ["D"]


# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
warn_unused_ignores = false
ignore_missing_imports = true
show_error_codes = true
pretty = false


# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
]